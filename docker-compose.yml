services:
  
  localstack:
    container_name: localstack
    image: localstack/localstack
    ports:
      - "4566:4566" # LocalStack Gateway
      - "4510-4559:4510-4559" # external services port range
      - "53:53" # DNS config (only required for Pro)
      - "53:53/udp" # DNS config (only required for Pro)
      - "443:443" # LocalStack HTTPS Gateway (only required for Pro)
    environment:
      - DEBUG=${DEBUG-}
      - PERSISTENCE=${PERSISTENCE-}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SERVICES=sqs
    volumes:
      - ./volume:/var/lib/localstack
    healthcheck:
      test: "exit 0"

  localstack-setup:
    image: mesosphere/aws-cli
    environment:
      - AWS_ACCESS_KEY_ID=dummyaccess
      - AWS_SECRET_ACCESS_KEY=dummysecret
      - AWS_DEFAULT_REGION=us-east-1
    entrypoint: /bin/sh -c
    command: >
      "
        aws sqs create-queue --endpoint-url http://host.docker.internal:4566 --queue-name logs_queue
        aws sqs list-queues --endpoint-url http://host.docker.internal:4566
        exit 0
      "
    depends_on:
      - localstack

  db:
    container_name: db
    image: postgres
    restart: unless-stopped
    env_file:
      - ./db/settings.env
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./db/01-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./db/02-data.sql:/docker-entrypoint-initdb.d/02-data.sql
    ports:
      - 5432:5432

  consumer:
    #container_name: consumer
    restart: unless-stopped
    build:
      dockerfile: ./Dockerfile
    env_file:
      - ./db/settings.env
    environment:
      SPRING_PROFILES_ACTIVE: consumer
      SPRING_APPLICATION_NAME: consumer-app
      DB_HOST: db
      DB_PORT: 5432
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_CUSTOM_ENDPOINT: http://host.docker.internal:4566
      AWS_SQS_QUEUE_HOST_AND_PORT: host.docker.internal:4566
    depends_on:
      localstack:
        condition: service_healthy
      localstack-setup:
        condition: service_completed_successfully
      db:
        condition: service_started
    deploy:
      mode: replicated
      replicas: 2

  # publisher:
  #   #container_name: publisher
  #   restart: unless-stopped
  #   build:
  #     dockerfile: ./Dockerfile
  #   env_file:
  #     - ./db/settings.env
  #   environment:
  #     SPRING_PROFILES_ACTIVE: publisher
  #     SPRING_APPLICATION_NAME: publisher-app
  #     DB_HOST: db
  #     DB_PORT: 5432
  #     AWS_ACCESS_KEY_ID: test
  #     AWS_SECRET_ACCESS_KEY: test
  #     AWS_CUSTOM_ENDPOINT: http://host.docker.internal:4566
  #     AWS_SQS_QUEUE_HOST_AND_PORT: host.docker.internal:4566
  # depends_on:
  #     localstack:
  #       condition: service_healthy
  #     localstack-setup:
  #       condition: service_completed_successfully
  #     db:
  #       condition: service_started

  producer:
    #container_name: producer
    restart: unless-stopped
    build:
      dockerfile: ./Dockerfile
    env_file:
      - ./db/settings.env
    environment:
      #SPRING_PROFILES_ACTIVE: producer
      SPRING_PROFILES_ACTIVE: producer-all
      SPRING_APPLICATION_NAME: producer-app
      DB_HOST: db
      DB_PORT: 5432
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_CUSTOM_ENDPOINT: http://host.docker.internal:4566
      AWS_SQS_QUEUE_HOST_AND_PORT: host.docker.internal:4566
    depends_on:
      localstack:
        condition: service_healthy
      localstack-setup:
        condition: service_completed_successfully
      db:
        condition: service_started
    deploy:
      mode: replicated
      replicas: 2

volumes:
  pg-data:
    name: postgres-container_pgdata
